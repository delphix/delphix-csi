---
- hosts: all
  become: true
  tasks:

  - name: create proc sys net bridge
    become: true
    become_method: sudo
    shell: |
      modprobe br_netfilter
      sysctl -p
      mkdir -p /proc/sys/net/bridge
      touch /proc/sys/net/bridge/bridge-nf-call-iptables
      echo 1 > /proc/sys/net/bridge/bridge-nf-call-iptables

  - name: enable ssh password authentication
    become: true
    become_method: sudo
    shell: |
      sed -i 's/^PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config
      systemctl restart sshd

  - name: Install pre-reqs packages
    yum:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - yum-utils
      - device-mapper-persistent-data
      - lvm2
      - epel-release
      - ca-certificates
      - curl
      - container-selinux 
      - selinux-policy-base
      - https://rpm.rancher.io/k3s-selinux-0.1.1-rc1.el7.noarch.rpm

  - name: Add Docker repo
    get_url:
      url: https://download.docker.com/linux/centos/docker-ce.repo
      dest: /etc/yum.repos.d/docer-ce.repo

  - name: Install docker and its dependecies
    yum:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    notify:
      - docker status

  - name: Add vagrant user to docker group
    user:
      name: vagrant
      group: docker

  - name: Allow 'docker' group to have passwordless sudo
    lineinfile:
      dest: /etc/sudoers
      state: present
      regexp: '^%docker'
      line: '%docker ALL=(ALL) NOPASSWD: ALL'
      validate: 'visudo -cf %s'

  - name: Increase Runtime Directory Size
    lineinfile:
      dest: /etc/systemd/logind.conf
      state: present
      regexp: '^RuntimeDirectorySize'
      line: 'RuntimeDirectorySize=100%'

  - name: Increase run tmps
    lineinfile:
      dest: /etc/fstab
      state: present
      line : 'tmpfs   /run         tmpfs   rw,nodev,nosuid,size=2G          0  0'
      validate: 'mount -a && echo %s'

  - name: Remove swapfile from /etc/fstab
    mount:
      name: "{{ item }}"
      fstype: swap
      state: absent
    with_items:
      - swap
      - none

  - name: Disable swap
    command: swapoff -a
    when: ansible_swaptotal_mb > 0

  - name: Start Docker service
    service:
      name: docker
      state: started
      enabled: yes

  - name: Create user "{{ uusername }}" on docker group
    user:
      name: "{{ uusername }}"
      password: "{{ upassword | password_hash('sha512') }}"
      groups: docker

  - name: Create toolkit folder
    become_user: delphix
    become_method: sudo
    command: mkdir -p /home/delphix/toolkit

  - name: Copy join command to local file
    copy:
      src: ./master-token
      dest: /tmp/master-token
      mode: '0777'

  - name: Get join token
    delegate_to: localhost
    become: no
    command: cat ./master-token
    register: master_token

  - name: download k3s install script
    get_url:
      url: https://get.k3s.io
      dest: /tmp/install_k3s.sh
      mode: "0777"
  
  - name: run k3s installer
    command:  sh /tmp/install_k3s.sh --node-ip={{ node_ip }} --node-external-ip={{ node_ip }}  --token=$K3S_TOKEN --server=$K3S_URL
    environment:
      K3S_TOKEN: "{{ master_token.stdout_lines[0] }}"
      K3S_URL: "https://{{ master_ip }}:6443"
      INSTALL_K3S_NAME: "{{ server_name }}"

  - name: Start K3S service
    service:
      name: "k3s-{{ server_name }}"
      state: restarted
      enabled: yes

  handlers:
    - name: docker status
      service: name=docker state=started
