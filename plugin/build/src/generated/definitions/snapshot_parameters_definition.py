#
# Copyright (c) 2019 by Delphix. All rights reserved.
#
from __future__ import absolute_import
from datetime import date, datetime

from generated.definitions.base_model_ import (
    Model, GeneratedClassesError, GeneratedClassesTypeError)
from generated import util

class SnapshotParametersDefinition(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, resync=None, validate=True):
        """SnapshotParametersDefinition - a model defined in Swagger. The type of some of these
        attributes can be defined as a List[ERRORUNKNOWN]. This just means they
        are a list of any type.

            :param resync: The resync of this SnapshotParametersDefinition.
            :type resync: bool
            :param validate: If the validation should be done during init. This
            should only be called internally when calling from_dict.
            :type validate: bool
        """
        self.swagger_types = {
            'resync': bool
        }

        self.attribute_map = {
            'resync': 'resync'
        }
        
        # Validating the attribute resync and then saving it.
        type_error = GeneratedClassesTypeError.type_error(SnapshotParametersDefinition,
                                                          'resync',
                                                          resync,
                                                          bool,
                                                          False)
        if validate and type_error:
            raise type_error
        self._resync = resync
    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The snapshotParametersDefinition of this SnapshotParametersDefinition.
        :rtype: SnapshotParametersDefinition
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resync(self):
        """Gets the resync of this SnapshotParametersDefinition.


        :return: The resync of this SnapshotParametersDefinition.
        :rtype: bool
        """
        return self._resync

    @resync.setter
    def resync(self, resync):
        """Sets the resync of this SnapshotParametersDefinition.


        :param resync: The resync of this SnapshotParametersDefinition.
        :type resync: bool
        """
        # Validating the attribute resync and then saving it.
        type_error = GeneratedClassesTypeError.type_error(SnapshotParametersDefinition,
                                                          'resync',
                                                          resync,
                                                          bool,
                                                          False)
        if type_error:
            raise type_error
        self._resync = resync
